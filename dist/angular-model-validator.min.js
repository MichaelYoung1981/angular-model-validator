!function(){angular.module("angularModelValidator",[])}(),function(){function ModelValidator(){function addRuleSet(model,rules){validationRuleSets.push({model:model,rules:rules})}function validateRules(model){var ruleSet=getValidationRuleSet(model);return validate(model,ruleSet)||null}function getValidationRuleSet(model){for(var i=0;i<validationRuleSets.length;i++)if(validationRuleSets[i].model===model)return validationRuleSets[i].rules}this.addRuleSet=addRuleSet,this.validate=validateRules;var validationRuleSets=[]}angular.module("angularModelValidator").service("ModelValidator",ModelValidator)}(),function(){function ValidateAndSubmitDirective($compile,$parse){function link(scope,element,attrs){var successFunction=$parse(attrs.validateAndSubmit,null,!0);bindErrors(scope,element,attrs),captureSubmit(scope,element,successFunction)}function bindErrors(scope,element,attrs){attrs.validationErrorSummary&&"false"!==attrs.validationErrorSummary?addErrorContainer(scope,element):addFieldErrors(scope,element,attrs)}function addErrorContainer(scope,element){var errorElement=angular.element("<ul ng-repeat='group in validatorController.errorMessages'><li ng-repeat='error in group'>{{error}}</li></ul>"),compiled=$compile(errorElement);element.prepend(errorElement),compiled(scope)}function addFieldErrors(scope,element,attrs){var modelName="";attrs.modelToValidate&&(modelName=attrs.modelToValidate+".");var model=scope.model||scope;Object.keys(model).forEach(function(property){var matchingInput=element.find("[ng-model='"+modelName+property+"']");addErrorMessage(matchingInput,property,scope)})}function addErrorMessage(matchingInput,property,scope){var messageElement=angular.element("<div ng-repeat=\"error in validatorController.errorMessages['"+property+"']\">{{error}}</div>"),compiled=$compile(messageElement);matchingInput.after(messageElement),compiled(scope)}function captureSubmit(scope,element,successFunction){element.on("submit",function(){scope.validatorController.validate(scope.model||scope.$parent,successFunction)})}return{restrict:"A",controller:ValidateAndSubmitController,controllerAs:"validatorController",scope:{model:"=modelToValidate"},link:link,priority:1}}function ValidateAndSubmitController(ModelValidator,$scope){function validate(theModel,successFunction){this.errorMessages=ModelValidator.validate(theModel),$scope.$apply(),this.errorMessages||successFunction($scope.$parent)}this.validate=validate}angular.module("angularModelValidator").directive("validateAndSubmit",ValidateAndSubmitDirective),ValidateAndSubmitDirective.$inject=["$compile","$parse"],ValidateAndSubmitController.$inject=["ModelValidator","$scope"]}();